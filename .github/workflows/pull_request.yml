name: Auto Work on Issue

on:
  pull_request:
    branches:
      - main

jobs:
  pull_request_testing:
    runs-on: ubuntu-latest

    steps:
      # test ci/ cd
      # checkout the repository content to github runner
      - name: Checkout
        uses: actions/checkout@v2

      # setup nodejs environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "18.16.1"

      # cache the dependencies to speed up the build
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
    
     # Check if the pull request has a description
      - name: Check PR Description
        run: |
          PR_DESCRIPTION=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} | jq -r '.body')
          
          DESCRIPTION_LENGTH=$(echo -n "$PR_DESCRIPTION" | wc -m)

          if [ "$DESCRIPTION_LENGTH" -lt 50 ]; then
            echo "Error: Pull request description must be at least 50 characters long."
            
            # Set the pull request status to "rejected"
            gh pr status ${{ github.event.pull_request.number }} --state error --description "Description length check failed" --context "workflow/failed"

            # Close the pull request
            gh pr close ${{ github.event.pull_request.number }}
            exit 1
          else
            echo "Success: Pull request description length is $DESCRIPTION_LENGTH characters."
          fi

      # Install dependencies only if the PR has the expected description
      - name: Install dependencies
        if: success()
        run: yarn install

      # Build the react app only if the PR has the expected description
      - name: Build
        if: success()
        run: yarn run build

      # Check if the previous steps were successful before merging
      - name: Check Previous Steps
        if: success()
        run: echo "Previous steps were successful."
        # Add any additional steps or commands you need here

      # Merge the PR only if the previous steps were successful
      - name: Merge Pull Request
        if: success()
        run: gh pr merge ${{ github.event.pull_request.number }} --squash --auto